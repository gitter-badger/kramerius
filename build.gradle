/*
 * Copyright (C) 2014 Pavel Stastny
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

println "Building K4; please read BUILD-README.txt"

apply plugin: 'distribution' // -> generate distributions
apply plugin: 'java' // -> generate javadoc


configurations {
        /**
         * Contains external editors
         */        
        editors {
		transitive = false
	}
}

dependencies {
        // editor dependency
        editors group: "cz.incad.kramerius", name: "editor", version: "5.0.0-SNAPSHOT", ext: "war"
        // rightseditor dependency
        editors group: "cz.incad.kramerius", name: "rightseditor", version: "5.0.0-SNAPSHOT", ext: "war"
}





distributions {
        // main distribution        
        main {
                contents {
                        from {'search/build/libs'}
                        from {'security-core/build/libs'}
                        from configurations.editors
                        from 'build/distributions/kramerius-javadoc.zip'
                }
        }

        // patch distribution        
        patch {
                contents {
                        from {'search/build/libs'}
                        from {'security-core/build/libs'}
                }
        }
}


repositories {
	mavenLocal()
}


/**
 * Inject to all subprojects 
 */
subprojects {

         apply plugin:'java'
         apply plugin: 'eclipse'
	 apply plugin: 'maven'


         ext.guiceversion ='3.0'
         ext.postgresversion = '8.4-702.jdbc4'
         ext.slf4jversion='1.6.0'
         ext.jerseyversion = '1.17.1'
         
         ext.generatedSources = "generated-sources"

         
         group='cz.incad.kramerius'
         version='5.0.2'
         
         sourceCompatibility = 1.6
         targetCompatibility= 1.6
         
         dependencies {

         	 // postgresql to all subprojects
         	 compile "postgresql:postgresql:${postgresversion}"
         	
                 // guice to all subprojects
         	 compile "com.google.inject:guice:${guiceversion}"
         	 compile "com.google.inject.extensions:guice-multibindings:${guiceversion}"
         	 compile "com.google.inject.extensions:guice-multibindings:${guiceversion}"
         	 compile "com.google.inject.extensions:guice-servlet:${guiceversion}"
         	 compile "com.google.inject.extensions:guice-assistedinject:${guiceversion}"
         	 compile "javax.inject:javax.inject:1"
         	 
         	 // logging
         	 compile "org.slf4j:slf4j-api:${slf4jversion}"
         	 compile "org.slf4j:log4j-over-slf4j:${slf4jversion}"
         	 compile "org.slf4j:slf4j-jdk14:${slf4jversion}"
         	 compile "org.slf4j:jcl-over-slf4j:${slf4jversion}"
         	 
         	 //junit to all subprojects
         	 testCompile "junit:junit:4.1"
         	 testCompile "org.easymock:easymock:3.0"
                
         }
         
         repositories {
         	 mavenLocal()
         	 mavenCentral()
         	 
         	 maven {
         	 	 url "http://download.java.net/maven/2/"
         	 }

         	 maven {
         	 	 url "https://m2.duraspace.org/content/repositories/releases"
         	 }

         	 maven {
         	 	 url "https://maven.java.net/content/repositories/snapshots/"
         	 }

         	 maven {
         	 	 url "http://guiceyfruit.googlecode.com/svn/repo/releases/"
         	 }

         	 maven {
         	 	 url "http://kramerius.googlecode.com/svn/mvnrepo"
         	 }

         	 maven {
         	 	 url "http://aplikator.googlecode.com/svn/mvnrepository"
         	 }

         	 maven {
         	 	 url "http://jsdoctk-plugin.googlecode.com/svn/repo"
         	 }
         	 
         	 maven {
         	 	 url "http://repository.springsource.com/maven/bundles/external"
         	 }

         	 maven {
         	 	 url "https://repository.jboss.org/nexus/content/repositories/thirdparty-releases"
         	 }

         	 maven {
         	 	 url "http://download.osgeo.org/webdav/geotools/"
         	 }
         	 
         	 maven {
         	 	 url "https://maven.atlassian.com/content/groups/public"
         	 }
         	 
         	 maven {
         	 	 url "http://jbig2-imageio.googlecode.com/svn/maven-repository"
         	 }
         }

        build.finalizedBy 'install'
}




task zipAllJavadocs(type: Zip) {
        //only from this project 
        String[] _spr = ["common","fedora-api","security-core","rest","search"];
        description "create javadocs for ${_spr} and zip it"
        baseName "kramerius-javadoc"
        for(String project in _spr) {
                dependsOn(":${project}:javadoc")
                into(project) {
                        from(tasks.getByPath(":${project}:javadoc").destinationDir)
                } 

        }
                
}

[distZip, distTar, installDist].each() { 
  it.dependsOn('clean',':search:build', 'zipAllJavadocs')
};


