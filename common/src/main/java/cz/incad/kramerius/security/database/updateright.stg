group updaterights;


insertParams_SecuredStreams() ::=<<
insert into criterium_param_entity(crit_param_id, vals,short_desc, long_desc)
    values(nextval('crit_param_id_sequence'), 'IMG_FULL;IMG_PREVIEW;IMG_FULL_ADM', 'Secured streams','')
>>

insertCriterium_SecuredStreams() ::=<<
insert into rights_criterium_entity(crit_id,qname,type,citeriumparam)
    values(nextval('crit_id_sequence'),'cz.incad.kramerius.security.impl.criteria.SecuredStreams',1,?)
>>

insertRight_SecuredStreams() ::=<<
insert into right_entity(right_id,uuid,action,rights_crit,group_id)
    values(nextval('right_id_sequence'),'uuid:1','read',?,?)
>>

select_common_role() ::=<<
    select group_id from group_entity where gname='common_users'
>>

select_admin_role() ::=<<
    select group_id from group_entity where gname='k4_admins'
>>

insertDisplayAdminMenuRight() ::=<<
    insert into right_entity (right_id, uuid, "action", group_id)
        select nextval('right_id_sequence'),'uuid:1','display_admin_menu',group_id 
        from group_entity
        where gname='k4_admins'
>>


insertRight_VirtualCollections() ::=<<
    insert into right_entity (right_id, uuid, "action", group_id)
        select nextval('right_id_sequence'),'uuid:1','virtualcollection_manage',group_id 
        from group_entity
        where gname='k4_admins'
>>


insertRight_DisplayAdminMenu() ::=<<
    insert into right_entity (right_id, uuid, "action", group_id)
        select nextval('right_id_sequence'),'uuid:1','criteria_rights_manage',group_id 
        from group_entity
        where gname='k4_admins'
>>



insertRight_K4ReplicationImport() ::=<<
    insert into right_entity (right_id, uuid, "action", group_id)
        select nextval('right_id_sequence'),'uuid:1','import_k4_replications',group_id 
        from group_entity
        where gname='k4_admins'
>>

insertRight_K4ReplicationExport() ::=<<
    insert into right_entity (right_id, uuid, "action", group_id)
        select nextval('right_id_sequence'),'uuid:1','export_k4_replications',group_id 
        from group_entity
        where gname='k4_admins'
>>

insertRight_ReplikatorK3()::=<<
    insert into right_entity (right_id, uuid, "action", group_id)
        select nextval('right_id_sequence'),'uuid:1','replikator_k3',group_id 
        from group_entity
        where gname='k4_admins'
>>

insertRight_NDKMetsImport() ::=<<
    insert into right_entity (right_id, uuid, "action", group_id)
        select nextval('right_id_sequence'),'uuid:1','ndk_mets_import',group_id 
        from group_entity
        where gname='k4_admins'
>>


insertRight_aggregate() ::=<<
    insert into right_entity (right_id, uuid, "action", group_id)
        select nextval('right_id_sequence'),'uuid:1','aggregate',group_id 
        from group_entity
        where gname='common_users'
>>

insertRight_showstatistics() ::=<<
    insert into right_entity (right_id, uuid, "action", group_id)
        select nextval('right_id_sequence'),'uuid:1','show_statictics',group_id 
        from group_entity
        where gname='k4_admins'
>>


insertRight_sort() ::=<<
    insert into right_entity (right_id, uuid, "action", group_id)
        select nextval('right_id_sequence'),'uuid:1','sort',group_id 
        from group_entity
        where gname='k4_admins'
>>


insertRight_show_print_menu() ::=<<
    insert into right_entity (right_id, uuid, "action", group_id)
        select nextval('right_id_sequence'),'uuid:1','show_print_menu',group_id 
        from group_entity
        where gname='k4_admins'
>>


updateUserEntities() ::=<<

    alter table user_entity alter column name drop not null;
    alter table user_entity alter column surname drop not null;

    DELETE FROM group_user_assoc
        WHERE user_id IN (SELECT user_id
              FROM (SELECT user_id,
                             row_number() over (partition BY loginname ORDER BY user_id) AS rnum
                     FROM user_entity) t
              WHERE t.rnum > 1);

    DELETE FROM user_entity
        WHERE user_id IN (SELECT user_id
              FROM (SELECT user_id,
                             row_number() over (partition BY loginname ORDER BY user_id) AS rnum
                     FROM user_entity) t
              WHERE t.rnum > 1);
    
    DROP INDEX LOGINNAME_IDX; 
    CREATE UNIQUE INDEX LOGINNAME_IDX ON USER_ENTITY (LOGINNAME);
>>

